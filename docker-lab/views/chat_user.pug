doctype html
html
  head
    title Chat with #{user.id}
    link(rel="stylesheet" href="/css/styles.css")
    script(type='module' src='https://unpkg.com/emoji-picker-element@latest')


  body
    .container
      h1 Chat with #{user.id}

      ul#chat-messages
        // Chat messages will be dynamically populated here

      // Emoji Picker Container
      .emoji-picker-container
        emoji-picker#emoji-picker(style='position: absolute; bottom: 100px; right: 50px;')

      form#chat-form(action="#" method="post")
        input(type="text" id="message-input" placeholder="Type a message")
        button(type="submit") Send

      button.button(onclick="location.href='/chat'") Back to Chat

    script(src="/socket.io/socket.io.js")
    script.
      document.addEventListener('DOMContentLoaded', function () {
        var socket = io();
        var userId = "#{user.id}";
        var senderUserId = "#{session.user.id}";

        socket.emit('registerUser', senderUserId);

        function displayMessage(sender, message) {
          var chatMessages = document.getElementById('chat-messages');
          var messageItem = document.createElement('li');
          messageItem.textContent = sender + ": " + message;
          chatMessages.appendChild(messageItem);
        }

        function fetchAndDisplayChatHistory() {
          fetch('/get-messages?senderId=' + senderUserId + '&receiverId=' + userId)
            .then(response => response.json())
            .then(messages => {
              messages.forEach(message => {
                displayMessage(message.sender === senderUserId ? 'You' : message.sender, message.message);
              });
            })
            .catch(error => console.error('Error fetching chat history:', error));
        }

        fetchAndDisplayChatHistory();

        var chatForm = document.getElementById('chat-form');
        var messageInput = document.getElementById('message-input');

        chatForm.addEventListener('submit', function (e) {
          e.preventDefault();
          var messageText = messageInput.value.trim();
          if (messageText) {
            socket.emit('chatMessage', { senderUserId, receiverUserId: userId, text: messageText });
            displayMessage('You', messageText);
            messageInput.value = '';
          }
        });

        socket.on('chatMessage', function (message) {
          if (message.sender === senderUserId || message.receiver === senderUserId) {
            displayMessage(message.sender === senderUserId ? 'You' : message.sender, message.message);
          }
        });

        document.querySelector('#emoji-picker').addEventListener('emoji-click', function(e) {
          messageInput.value += e.detail.emoji.unicode;
        });
      });
